syntax = "proto3";// You can use either proto2 or proto3. Both are supported by srpc
//protoc dsp.proto --cpp_out=./ --proto_path=./
//srpc_generator protobuf ./dsp.proto ./
message DSPControllerRequest{};
message DSPControllerResponse{};

message ReconstructTimeResponse{
    float time = 1;
};


message CommuRequest{
    int32 mode = 1;
};

service DSPController{
    rpc LoadSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc StartSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc StopSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc SwitchSarApp(DSPControllerRequest) returns (DSPControllerResponse);

    rpc LoadElecReco(DSPControllerRequest) returns (DSPControllerResponse);
    rpc StartElecReco(DSPControllerRequest) returns (DSPControllerResponse);
    rpc StopElecReco(DSPControllerRequest) returns (DSPControllerResponse);
    rpc SwitchElecReco(DSPControllerRequest) returns (DSPControllerResponse);
    

    rpc LoadCommunication(CommuRequest) returns (DSPControllerResponse);
    rpc StartCommunication(CommuRequest) returns (DSPControllerResponse);
    rpc StopCommunication(CommuRequest) returns (DSPControllerResponse);
    rpc SwitchCommunication(CommuRequest) returns (DSPControllerResponse);
    rpc ConfigCommunication(CommuRequest) returns (DSPControllerResponse);

    
    rpc GetComReconstructTime(DSPControllerRequest) returns(ReconstructTimeResponse);
    rpc GetSarReconstructTime(DSPControllerRequest) returns(ReconstructTimeResponse);
    rpc GetElecReconstructTime(DSPControllerRequest) returns(ReconstructTimeResponse);
};
